name: SonarCloud

on:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main

permissions:
  contents: read
  pull-requests: read

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: windows-latest
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if PR
        shell: bash
        run: echo "PR=${{ github.event_name == 'pull_request_target' }}" >> $GITHUB_ENV
      - name: Check Modified Files
        id: check-files
        if: env.PR == 'true'
        uses: dorny/paths-filter@v3
        with:
          filters: |
            github:
              - '.github/**'
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Exit if unsafe PR
        if: env.PR == 'true' && steps.check-files.outputs.github == 'true'
        run: |
          echo "Unsafe PR detected: Modifications to .github/ files are not allowed."
          exit 1
      - name: Checkout PR head if safe
        if: env.PR == 'true' && steps.check-files.outputs.github == 'false'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-sonar-nuget-${{ hashFiles('Directory.Packages.props', '.config/dotnet-tools.json') }} #hash of project files
          restore-keys: ${{ runner.os }}-sonar-nuget-
      - name: Install Tools
        shell: powershell
        run: dotnet tool restore
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          dotnet sonarscanner begin /k:"na1307_EncodingConverter" /o:"na1307" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.scanner.skipJreProvisioning=true
          dotnet restore
          dotnet build --no-restore --no-incremental -p:CreateVsixContainer=false -p:DeployExtension=false
          dotnet coverage collect 'dotnet test --no-build --verbosity normal' -f xml  -o 'coverage.xml'
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
